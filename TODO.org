set-properties, string-to-number pb si STD10 (rfc772)
STD10 n'est pas barré

'I' in *rfcinfo* -> close window

allow going forward in history -> which key ?

cleaner way to define keymap?
(mapc (lambda (p) (define-key rfcview-mode-map (car p) (cdr p)))
      '(( "0" . rfcinfo-goto)
	( "1" . rfcinfo-bortzmeyer)))

use with-temp-message?

* irfc

look at irfc (possible replacement for rfcview)
http://www.emacswiki.org/emacs/Irfc

** bugs inherited from rfcview
see 'rfcview problems' below
 
** installation via (setq irfc-assoc-mode t) does not work

** should provide a mode hook

* bugs
** DONE irfc: buffer name is not rfcxxxx.txt
if irfc-buffer-name-includes-title is t (default)

rfcinfo commands do not recognize the buffer holds an rfc

** DONE irfc: next/prev link
put point on [ or ]
docid at point misses the docid

** DONE first use
loading file
condition-case: Can't load from `rfcinfo-dbfile'

if simply doing import:
Importing RFC info from XML file.  This may take some time...
let: Symbol's value as variable is void: rfcinfo-xml-mdtm

=> call rfcinfo-init from load error

** TODO Invalid face reference: nil [30 times]
lots of
** TODO BCP
doc and code assumes a BCP maps to only one
false: eg bcp41
rfc2914 updated by rfc7141

then, what title to use?

** DONE errata
on 1034: "RFC STD13 has no errata"
on msg 'RFC xxxx has no errata' xxx has text properties
** TODO rfcinfo-mode
raises error if not in proper buffer, but the mode is set anyway!
also see 'saving' item

** DONE when title search returns 0 entries
  let: Search failed: "~"

** DONE rfcinfo-click
calls unknown function rfcinfo-status
=> FIXed to rfcinfo-show

* possibly to correct
** rfcinfo-set-properties -> fontify?
** DONE document how change summary is computed
** TODO newer test
sometimes download remote xml file, after import concludes there's
nothing new...  => investigate: save old one to diff them

=> Ok: RFC newly has errata
=> Ko: nothing changed in XML file
=> other possibilities?

sometimes the file is newer but hasn't changed (mdtm changed, diff empty)

rfcinfo-load
rfcinfo: local xml-mdtm (21335 35440) [3 times]
Opening FTP connection to ftp.ripe.net via proxy-ftp.esisar.inpg.fr...done
Logging in as user anonymous@ftp.ripe.net...done
Getting PWD...done
Trying passive mode...on
Doing CD...done
Listing /anonymous@ftp.ripe.net:/rfc/...done
rfcinfo: remote xml-mdtm (21338 11632)
Retrieving /anonymous@ftp.ripe.net:/rfc/rfc-index.xml...done
Using vacuous schema
Saving file /home/deleuzec/.cache/rfc/rfc-index.xml...
Wrote /home/deleuzec/.cache/rfc/rfc-index.xml
Importing RFC info from XML file.  This may take some time...
Done.  No new or changed RFCs.
=> diffing file shows no difference

*** running refresh from fresh started emacs
why printing xml-mdtm 3 times?

For information about GNU Emacs and the GNU system, type C-h C-a.
View mode: type C-h for help, h for commands, q to quit.
xml-mdtm (21315 50160) [3 times]
Opening FTP connection to ftp.ripe.net...done
Logging in as user anonymous@ftp.ripe.net...done
Getting PWD...done
Trying passive mode...on
Doing CD...done
Listing /anonymous@ftp.ripe.net:/rfc/...done
Remote rfc-index.xml hasn't changed. No need to refresh.

when running rfcinfo-show instead, printed only 1 time.

when printing msg for entering rfcinfo-load: rfcinfo-load called one
time only

rfcinfo-load
xml-mdtm (21315 50160) [3 times]
Opening FTP connection to ftp.ripe.net...done
Logging in as user anonymous@ftp.ripe.net...done
Getting PWD...done

* convenience
** allow forward in history
with C-c C-f ? (help-mode like)
or allow to go back without undoing (emacs way?)

** remember last news summary
by saving the buffer in cache directory
+ function (binding?) to load it?
rfcinfo-whats-new

** DONE test if remote xml file is newer
get remote mdtm from (nth 5 (file-attributes ...))
get old mdtm from local db file

rfcinfo-load: load rfcinfo-xml-mdtm as well
refresh: get remote mdtm if equal abort
   else set rfcinfo-xml-mdtm, call import
   import does the saving

mdtm is a list of two 16 bit integers

** batch refresh
** striked 8/0
not well readable, see eg rfc2481

** DONE tab/S-tab
to navigate on blocks

** DONE when displaying STD
set point on first rfc
... in rfcinfo-display?
 -> do not put - after std docid!
but handle possible search failure (for empty std, eg STD1)

** propose to refresh if apparently run for the first time
include info in the tutorial?!

rfcinfo-refresh should first test if rfcinfo-index-xml-file dir part
exists
=> redéfinir comme utilisant rfcinfo-cache-dir (idem pour rfcinfo-dbfile)

if rfcdir does not exist, at file loading (eg from autoload)
rfcinfo-load: condition-case: Can't load from `rfcinfo-dbfile'

** DONE create cachedir if does not exist
  tested by rfcinfo-refresh only?
  + also there xml and db files ?
    redefine variables ?

see irfc-open

** customization for faces
* priority

clean-up non-local arg in read-docid

STD3 updates STD7? check this.

use menu Elisp/check documentation strings

a word about erratas
make ref (doc/integration)

* using rfcinfo out of emacs
emacs -q --no-site-file -T rfcinfo -nbc -l <rfcinfo> -f rfcinfo-show
emacs -q --no-site-file -T rfcinfo -nbc -l <rfcinfo> --eval "(rfcinfo-do-show 1034 nil)"

emacs -q --no-site-file -T rfcinfo -nbc -l Src/rfcinfo/rfcinfo.el --eval "(progn (tool-bar-mode 0) (rfcinfo-do-show \"RSVP\" nil))"

don't split window in this case?


pb: caddr not defined!
    loop
=> require 'cl


* additional features
** search author
** search in abstract
** show abstract
    -> what exactly does abstract element contain in xml index?
       document abstract if one exists + [STANDARDS-TRACK] if applicable
no abstract: rfc1034 ...xml file provides one...

** show keywords
xml file has some

** search keywords
** show recursive dependencies
** generate graph for graphviz

generate map (viz) and display it in browser
display map in emacs?
possible control back from browser to emacs?
 -> click on rfc on map -> display info in emacs...

** 3-lines status: show numbers of obsolating/updating rfcs?
** diff
show what has changed since last update
possibly remember such changes?

*** DONE newly published RFC
*** DONE status changes
*** DONE updated/obsolated changes
from list of new RFCs, build two lists

*** TODO sub-series change?
** user annotations
  (related rfcs, free text...)
  alist, integrated in vector during import (or when load-ing?)
** user lists
save named lists of rfcs
edit list (add/remove/change order)

** multiple buffer
currently only one possible
usage of several?

** saving buffer

simply save as text, need import text as rfcinfo buffer

for import summary, propose saving as 'New RFCs <date>'
alist string to number list
save
load (propose completion)
forget?

** others

sb-rfcview.el ?
provide a menu ?
also use w3m to download?
unfold/fold updby/obsoby trees
?n show next rfc...
SPC/DEL for scroll forward/backward ?
debian package doc-rfc (see rfcview)


set-window-dedicated-p ?
cache dir should be shared ?
look at ffap ?
faces for tty

* current problems
** does not update '+' (local availability status) when downloaded
** sets mark two times while loading?
** RFC download part should go in rfcview?
is already handled by irfc
see if it's ok and better

** clean up xml import code
+l in ref counts visible lines in rfcview mode...
=> no?

** errata for unknown, browser displays whole list of errata
** errata should read from minibuffer if not found at point
       should use current rfc from rfcview! (or use I, e ?)
  if no arg && rfcinfo-mode, use this one
  if arg && rfcinfo-mode, ask
  if no arg && no rfcinfo-mode, use point, ask if none
  if arg && no rfcinfo-mode, use point, ask with default

** rfc1035-5 currently fails (item number 5 found)
same rfc2205-1
  -> probably only applies to level 1 headings

** DONE scroll useless (except if window too small)
** locs

build sec with +l from point
  -> based on rfcview headings

locs, use rfcview header detection
;;
1. correct them to not miss any (nor catch other things)
2. allow absence of final dot
3. 

build-ref do not use rfcview, search for section header with re-loc
-> re-sec, re-loc

** how to handle rfcview optional dependency?
 -> build-ref only (easily) callable from rfcview-mode

** performance
parsing the xml file can be very long (more than 1 min) on a not so
recent machine...
(4 min on 1Ghz 256MB)

** init code rfcinfo-load should rather be an autoload or something like that?


* rfcview problems
** should provide a mode hook
** loops on rfc1321
also irfc

** rfcview in debian emacs-goodies-el (but 0.12 instead of 0.13)
** bug rfc1035-3.4.2, 25 (SMTP) (section 3.4.2, taken as heading)
also irfc
 -> check final dot?
 -> check previous empty line?

** misses headings not a column 0 (eg rfc2205)
also irfc
 -> allow blanks for headings at level 2 and more?

** misses toc in rfc2206 (no end dot in toc entries)

** headings menu poorly cut when large
(do it by sections/subsections?)

** does not detect multiple references (2205 -> [RSVP93, RFC 1633])
rfcview-use-view-mode-p -flag?

** in speedbar, sections are in reverse order? (rfc1035-3)
  speedbar does its own heading parsing?
  or uses imenu???

** see shrink-window-if-larger-than-buffer?

* rfcview toadds
** next/previous heading navigation ala outline or org-mode
=> outline-minor-mode?
   needs setting outline-regexp

** goto table of contents
irfc does provide it (G)

* RFCs with problems
2206 - TOC contains non existant 3.1, 3.2

6691 updates 2385 while it's already obsolated by 5925

* done

display new RFCs when refreshing?
display as list as in sub-series and search
diff ? rfcinfo.db has 0 lines!

function deps

search selected if non number in C-c r

rfcinfo-show : STD all stds, etc
               words : search title

pb std34 (car aucun contenu, rfcinfo-do-show cherche "-" = après le
numéro du rfc, mais pas le cas pour un std
=> changé ~~ en -~ + déplacé save-excursion dans rfcinfo-follow

dep STD10 (ex 772), le 10 est barré
(car rfc10 est obsolète et rfcinfo-set-properties utilise
rfcinfo-regexp et string-to-number)
(+ STD10 est obsolète par 2821, devrait barrer STD10 complet ?)
revoir def de rfcinfo-regexp

STD in a dependency should
  - display title
  - be forwardable
but, this only occurs three times: rfc772, 780, 788...
also 2821 !

** BCP, FIY, STD-lookup

all have entries in XML file
(but sometimes empty)

    <bcp-entry>
        <doc-id>BCP0013</doc-id>
        <is-also>
            <doc-id>RFC4289</doc-id>
            <doc-id>RFC6838</doc-id>
        </is-also>
    </bcp-entry>

    <fyi-entry>
        <doc-id>FYI0002</doc-id>
        <is-also>
            <doc-id>RFC1470</doc-id>
        </is-also>
    </fyi-entry>

    <std-entry>
        <doc-id>STD0003</doc-id>
        <title>Requirements for Internet Hosts</title>
        <is-also>
            <doc-id>RFC1122</doc-id>
            <doc-id>RFC1123</doc-id>
        </is-also>
    </std-entry>

they can be mapped to several RFCs...

all are also referenced from the <rfc-entry>

    <rfc-entry>
        <doc-id>RFC0821</doc-id>
        <title>Simple Mail Transfer Protocol</title>
	...
        <is-also>
            <doc-id>STD0010</doc-id>
        </is-also>
	...
    </rfc-entry>

an rfc can is-also at most one (std or fiy or bcp)
an std/fiy/bcp can is-also several (rfcs)

*** so,
we need to add is-also info in each rfc-entry

then do we:
1) handle three new arrays?
2) just search in rfc array?

note that bcp status is redondant with is-also bcp (which also gives number)

STD0010 & 39 are historic

we also need to display std (and other) info : list of mapped rfcs
(new kind of dependency - is-also/contains)

*** how are STD dependency cross-references currently handled?
they are ignored!
see in rfcinfo-fold-all

are there other than rfc2821?

*** NIC, IEN, RTR (external references)


* future

** DONE rfcinfo-fold-all number extracting assumes string format is RFCxxxx
   => will break when number 9999 is exceeded!

** evolve into a dired-like interface?
