set-properties, string-to-number pb si STD10 (rfc772)
STD10 n'est pas barré

build-ref do not use rfcview, search for section header with re-loc
-> re-sec, re-loc

'I' in *rfcinfo* -> close window

allow going forward in history -> which key ?

cleaner way to define keymap?
(mapc (lambda (p) (define-key rfcview-mode-map (car p) (cdr p)))
      '(( "0" . rfcinfo-goto)
	( "1" . rfcinfo-bortzmeyer)))

* priority

clean-up non-local arg in read-docid

STD3 updates STD7? check this.

use menu Elisp/check documentation strings

a word about erratas
make ref (doc/integration)

* using rfcinfo out of emacs
emacs -q --no-site-file -T rfcinfo -nbc -l <rfcinfo> -f rfcinfo-show
emacs -q --no-site-file -T rfcinfo -nbc -l <rfcinfo> --eval "(rfcinfo-do-show 1034 nil)"

emacs -q --no-site-file -T rfcinfo -nbc -l Src/rfcinfo/rfcinfo.el --eval "(progn (tool-bar-mode 0) (rfcinfo-search-title \"PPP\"))"

don't split window in this case?


pb: caddr not defined!
    loop
=> require 'cl

* convenience
** propose to refresh if apparently run for the first time
** create cachedir if does not exist
  tested by rfcinfo-refresh only?
  + also there xml and db files ?
    redefine variables ?

** customization for faces
* additional features
** search author
** search in abstract
** show abstract
    -> what exactly does abstract element contain in xml index?
       document abstract if one exists + [STANDARDS-TRACK] if applicable
no abstract: rfc1034 ...xml file provides one...

** show keywords
xml file has some

** search keywords

** show recursive dependencies
** others

generate map (viz) and display it in browser
display map in emacs?
possible control back from browser to emacs?
 -> click on rfc on map -> display info in emacs...

diff status (when open)/summary?
sb-rfcview.el ?
provide a menu ?
also use w3m to download?
unfold/fold updby/obsoby trees
?n show next rfc...
SPC/DEL for scroll forward/backward ?
debian package doc-rfc (see rfcview)
user annotations (related rfcs, free text...)
  alist, integrated in vector during import (or when load-ing?)
set-window-dedicated-p ?
customize faces
cache dir should be shared ?
look at ffap ?
faces for tty

build sec with +l from point
  -> based on rfcview headings

how to handle rfcview optional dependency?
 -> build-ref only (easily) callable from rfcview-mode


refs and secs, use rfcview header detection
;;
1. correct them to not miss any (nor catch other things)
2. allow absence of final dot
3. 

search selected if non number in C-c r?

display new RFCs when refreshing?

* current problems

does not update '+' (local availability status) when downloaded

function deps

sets mark two times while loading?

download part should go in rfcview?

clean up xml import code
+l in ref counts visible lines in rfcview mode...
=> no?

errata for unknown, browser displays whole list of errata

errata should read from minibuffer if not found at point
       should use current rfc from rfcview! (or use I, e ?)
  if no arg && rfcinfo-mode, use this one
  if arg && rfcinfo-mode, ask
  if no arg && no rfcinfo-mode, use point, ask if none
  if arg && no rfcinfo-mode, use point, ask with default

rfc1035-5 currently fails (item number 5 found)
same rfc2205-1
  -> probably only applies to level 1 headings

scroll useless (except if window too small)

3-lines status: show numbers of obsolating/updating rfcs?

* BCP, FIY, STD-lookup

all have entries in XML file
(but sometimes empty)

    <bcp-entry>
        <doc-id>BCP0013</doc-id>
        <is-also>
            <doc-id>RFC4289</doc-id>
            <doc-id>RFC6838</doc-id>
        </is-also>
    </bcp-entry>

    <fyi-entry>
        <doc-id>FYI0002</doc-id>
        <is-also>
            <doc-id>RFC1470</doc-id>
        </is-also>
    </fyi-entry>

    <std-entry>
        <doc-id>STD0003</doc-id>
        <title>Requirements for Internet Hosts</title>
        <is-also>
            <doc-id>RFC1122</doc-id>
            <doc-id>RFC1123</doc-id>
        </is-also>
    </std-entry>

they can be mapped to several RFCs...

all are also referenced from the <rfc-entry>

    <rfc-entry>
        <doc-id>RFC0821</doc-id>
        <title>Simple Mail Transfer Protocol</title>
	...
        <is-also>
            <doc-id>STD0010</doc-id>
        </is-also>
	...
    </rfc-entry>

an rfc can is-also at most one (std or fiy or bcp)
an std/fiy/bcp can is-also several (rfcs)

** so,
we need to add is-also info in each rfc-entry

then do we:
1) handle three new arrays?
2) just search in rfc array?

note that bcp status is redondant with is-also bcp (which also gives number)

STD0010 & 39 are historic

we also need to display std (and other) info : list of mapped rfcs
(new kind of dependency - is-also/contains)

** how are STD dependency cross-references currently handled?
they are ignored!
see in rfcinfo-fold-all

are there other than rfc2821?

** NIC, IEN, RTR (external references)

* rfcview problems

rfcview in debian emacs-goodies-el (but 0.12 instead of 0.13)

bug rfc1035-3.4.2, 25 (SMTP) (section 3.4.2, taken as heading)
 -> check final dot?
 -> check previous empty line?

misses headings not a column 0 (eg rfc2205)
 -> allow blanks for headings at level 2 and more?

misses toc in rfc2206 (no end dot in toc entries)

headings menu poorly cut when large
(do it by sections/subsections?)

does not detect multiple references (2205 -> [RSVP93, RFC 1633])
rfcview-use-view-mode-p -flag?

in speedbar, sections are in reverse order? (rfc1035-3)
  speedbar does its own heading parsing?
  or uses imenu???

see shrink-window-if-larger-than-buffer?

init code rfcinfo-load should rather be an autoload or something like that?

* rfcview toadds

next/previous heading navigation ala outline or org-mode


* diff
show what has changed since last update
possibly remember changes?

* done

rfcinfo-show : STD all stds, etc
               words : search title

pb std34 (car aucun contenu, rfcinfo-do-show cherche "-" = après le
numéro du rfc, mais pas le cas pour un std
=> changé ~~ en -~ + déplacé save-excursion dans rfcinfo-follow

dep STD10 (ex 772), le 10 est barré
(car rfc10 est obsolète et rfcinfo-set-properties utilise
rfcinfo-regexp et string-to-number)
(+ STD10 est obsolète par 2821, devrait barrer STD10 complet ?)
revoir def de rfcinfo-regexp

STD in a dependency should
  - display title
  - be forwardable
but, this only occurs three times: rfc772, 780, 788...
also 2821 !

* future

*FIXED* rfcinfo-fold-all number extracting assumes string format is RFCxxxx
=> will break when number 9999 is exceeded!

evolve into a dired-like interface?
